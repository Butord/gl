const cron = require('node-cron');
const moment = require('moment-timezone');
const db = require('./db');
const TelegramBot = require('node-telegram-bot-api');
const token = process.env.TELEGRAM_BOT_TOKEN;
const bot = require('./bot');


function startScheduler() {
  cron.schedule('* * * * *', () => {
    const now = moment().utc(); // –ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ UTC
    console.log('–ü–æ—Ç–æ—á–Ω–∏–π UTC —á–∞—Å:', now.format()); // –õ–æ–≥—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å

    db.getAllReminders((reminders) => {
      if (reminders.length === 0) {
        console.log('–ù–∞–≥–∞–¥—É–≤–∞–Ω—å –Ω–µ–º–∞—î.');
      }

      reminders.forEach(reminder => {
        const reminderTime = moment(reminder.reminder_time).tz(reminder.timezone);
        const notifyTime = moment(reminder.notify_time).tz(reminder.timezone);

        console.log(`–ß–∞—Å –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${reminder.user_id}: ${reminderTime.format()}`);
        console.log(`–ß–∞—Å –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${reminder.user_id}: ${notifyTime.format()}`);
        console.log(`–°—Ç–∞—Ç—É—Å –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è - ${reminder.is_sent_notify}, –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è - ${reminder.is_sent_reminder}`);

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        if (now.isSameOrAfter(notifyTime.utc()) && reminder.is_sent_notify === 0) {
          console.log(`–ù–∞–¥—Å–∏–ª–∞—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${reminder.user_id}: ${reminder.reminder_text}`);
          bot.sendMessage(reminder.user_id, `üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è: ${reminder.reminder_text} –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–µ –Ω–∞ ${reminderTime.format('HH:mm')}`)
            .then(() => {
              // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —è–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–µ
              db.markAsSent(reminder.id, 'notify', (err) => {
                if (err) {
                  console.error(`–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–∑–Ω–∞—á–µ–Ω–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —è–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ–≥–æ –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è ${reminder.id}`);
                } else {
                  console.log(`–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è ${reminder.id} —É—Å–ø—ñ—à–Ω–æ –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–µ.`);
                }
              });
            })
            .catch(err => {
              console.error(`–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${reminder.user_id}:`, err);
            });
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
        if (now.isSameOrAfter(reminderTime.utc()) && reminder.is_sent_reminder === 0) {
          console.log(`–ù–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${reminder.user_id}: ${reminder.reminder_text}`);
          bot.sendMessage(reminder.user_id, `üîî –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: ${reminder.reminder_text}`)
            .then(() => {
              // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è —è–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–µ
              db.markAsSent(reminder.id, 'reminder', (err) => {
                if (err) {
                  console.error(`–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–∑–Ω–∞—á–µ–Ω–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è —è–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ–≥–æ –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è ${reminder.id}`);
                } else {
                  console.log(`–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è ${reminder.id} —É—Å–ø—ñ—à–Ω–æ –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–µ.`);
                }
              });
            })
            .catch(err => {
              console.error(`–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${reminder.user_id}:`, err);
            });
        }
      });
    });
  });
}

module.exports = {
  startScheduler
};
